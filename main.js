// Generated by CoffeeScript 1.6.3
(function() {
  var limit, mps, msgLength, randomString, testRunning, ws, wsUrl;

  limit = 0xffff;

  wsUrl = "ws://echo.websocket.org";

  msgLength = 0xfff;

  mps = 10;

  ws = null;

  testRunning = false;

  randomString = (function() {
    var availableChars, availableLen, code, _i;
    availableChars = [];
    for (code = _i = 33; _i <= 126; code = ++_i) {
      availableChars.push(String.fromCharCode(code));
    }
    availableLen = availableChars.length;
    return function(length) {
      var str;
      if (length < 1) {
        return;
      }
      str = "";
      while (length--) {
        str = str + availableChars[Math.round(Math.random() * availableLen)];
      }
      return str;
    };
  })();

  $(function() {
    var lengthInput, logReceived, logSent, mpsInput, recLog, sendLog, startBtn, startTest, stopBtn, stopTest, wsLoop;
    startBtn = $('#start');
    stopBtn = $('#stop');
    lengthInput = $('#msg_length');
    mpsInput = $('#mps');
    sendLog = $('#send_console');
    recLog = $('#receive_console');
    lengthInput.val(msgLength);
    lengthInput.on('keyup', function() {
      return msgLength = lengthInput.val();
    });
    mpsInput.val(mps);
    mpsInput.on('keyup', function() {
      return mps = mpsInput.val() || 1;
    });
    logReceived = function(string) {
      return recLog.text("" + (Date.now()) + ": " + string);
    };
    logSent = function(string) {
      return sendLog.text("" + (Date.now()) + ": " + string);
    };
    wsLoop = function() {
      var msg, timeout;
      if (!testRunning) {
        return;
      }
      timeout = 1000 / mps;
      msg = randomString(msgLength);
      ws.send(msg);
      logSent("" + msgLength + " chars long message sent: " + (msg.substr(0, 15)));
      return window.setTimeout(wsLoop, timeout);
    };
    startTest = function() {
      ws = new WebSocket(wsUrl);
      ws.onopen = function() {
        logReceived("Websocket open");
        testRunning = true;
        return wsLoop();
      };
      ws.onclose = function() {
        logReceived("Websocket closed");
        return stopTest();
      };
      ws.onmessage = function(e) {
        return logReceived("WS message (" + e.data.length + " chars) received: " + (e.data.substr(0, 20)));
      };
      return ws.onerror = function(e) {
        return logReceived.parent().append("<div>" + (Date.now()) + ": Error: " + e.data + "</div>");
      };
    };
    stopTest = function() {
      testRunning = false;
      if (ws && ws.readyState === ws.OPEN) {
        return ws.close();
      }
    };
    startBtn.on('click', function(e) {
      e.preventDefault();
      return startTest();
    });
    return stopBtn.on('click', function(e) {
      e.preventDefault();
      return stopTest();
    });
  });

}).call(this);
